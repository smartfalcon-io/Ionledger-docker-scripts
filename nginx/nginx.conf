# =========================================================
# 1️⃣ HTTP (Port 80) - Redirect all traffic to HTTPS
# =========================================================
server {
    listen 80;
    server_name bpass.ionledger.co.in endorser.ionledger.co.in;

    # Allow Certbot to renew certificates
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect everything else to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# =========================================================
# 2️⃣ HTTPS (Port 443) - Secure traffic
# =========================================================
server {
    listen 443 ssl;
    server_name bpass.ionledger.co.in endorser.ionledger.co.in;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/bpass.ionledger.co.in/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/bpass.ionledger.co.in/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # --- Tenant API ---
    location /tenant-api/ {
        rewrite ^/tenant-api/(.*)$ /$1 break;
        proxy_pass http://tenant-proxy:8080/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
        add_header Access-Control-Allow-Headers 'Origin, Content-Type, Accept, Authorization';
        if ($request_method = OPTIONS) { return 204; }
    }

    # --- Tenant UI ---
    location / {
        proxy_pass http://tenant-ui:8080/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        add_header Access-Control-Allow-Origin *;
    }

    # --- Traction ---
    location /traction/ {
        rewrite ^/traction/(.*)$ /$1 break;
        proxy_pass http://traction-agent:8031/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
        add_header Access-Control-Allow-Headers 'Origin, Content-Type, Accept, Authorization';
        if ($request_method = OPTIONS) { return 204; }
    }


        location /ionledger-web-ui/ {
        proxy_pass http://ion-ledger-web-ui:80/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }

     # --- Issuer API ---
    location /issuer/ {
        proxy_pass http://issuer-apis:8087/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
        add_header Access-Control-Allow-Headers 'Origin, Content-Type, Accept, Authorization';
        if ($request_method = OPTIONS) { return 204; }
    }



    # --- Keycloak Admin ---
    location /admin/ {
        rewrite ^/admin(/.*)$ $1 break;
        proxy_pass http://keycloak:8080/admin/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # --- Endorser API ---
    location /endorser1/ {
        rewrite ^/endorser1/(.*)$ /$1 break;
        proxy_pass http://endorser-api:5000/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
        add_header Access-Control-Allow-Headers 'Origin, Content-Type, Accept, Authorization';
        if ($request_method = OPTIONS) { return 204; }
    }

    # --- Endorser Agent 1 ---
    location /endorser-agent-1/ {
        rewrite ^/endorser-agent-1/(.*)$ /$1 break;
        proxy_pass http://endorser-agent-1:9033/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Api-Key "change-me";
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
        add_header Access-Control-Allow-Headers 'Origin, Content-Type, Accept, Authorization, X-Api-Key';
        if ($request_method = OPTIONS) { return 204; }
    }

    # --- Endorser Agent (for other domain) ---
    location /endorser-agent/ {
        proxy_pass http://endorser-agent:9030/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
        add_header Access-Control-Allow-Headers 'Origin, Content-Type, Accept, Authorization';
        if ($request_method = OPTIONS) { return 204; }
    }
}
